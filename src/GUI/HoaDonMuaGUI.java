/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import BUS.HoaDonMuaBUS;
import DAO.HoaDonMuaDAO;
import DTO.ChiTietHDM;
import DTO.FormatValue;
import DTO.HoaDonMua;
import DTO.SanPham;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.ArrayList;

import javax.swing.JComponent;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingUtilities;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author BomPC
 */
public class HoaDonMuaGUI extends javax.swing.JPanel {

        private final HoaDonMuaBUS hdmBUS;

        public HoaDonMuaBUS getBUS() {
                return hdmBUS;
        }

        /**
         * Creates new form HoaDonMuaGUI
         */
        public HoaDonMuaGUI(ArrayList<String> dsHanhDongCuaChucNang) {
                hdmBUS = new HoaDonMuaBUS(new HoaDonMuaDAO());
                initComponents();
                customComponents();
                jbtnThem.setVisible(false);
		jbtnThuHoi.setVisible(false);
		for (String hd : dsHanhDongCuaChucNang) {
			if (hd.toLowerCase().contains("thêm")) {
				jbtnThem.setVisible(true);
			} else if (hd.toLowerCase().contains("thu")) {
				jbtnThuHoi.setVisible(true);
			}
		}
        }

        /**
         * This method is called from within the constructor to initialize the form.
         * WARNING: Do NOT modify this code. The content of this method is always
         * regenerated by the Form Editor.
         */
        @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jbtnThem = new javax.swing.JButton();
        jbtnThuHoi = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jcbNameSearch = new javax.swing.JComboBox<>();
        jtfNameSearch = new javax.swing.JTextField();
        jbtnSearch = new javax.swing.JButton();
        jlbNccSearch = new javax.swing.JLabel();
        jtfNcc = new javax.swing.JTextField();
        jlbSanPhamSearch = new javax.swing.JLabel();
        jtfSanPham = new javax.swing.JTextField();
        jbtnLamMoi = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jpnCTHD = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtbCTHD = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jlbTitleTongTienHD = new javax.swing.JLabel();
        jlbTongTienHD = new javax.swing.JLabel();
        jpnCTSP = new javax.swing.JPanel();
        jlbMaSP = new javax.swing.JLabel();
        jlbSanPham = new javax.swing.JLabel();
        jlbGiaNhap = new javax.swing.JLabel();
        jlbSoLuongNhap = new javax.swing.JLabel();
        jlbTongTienCT = new javax.swing.JLabel();
        jlbNcc = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbDSHD = new javax.swing.JTable();

        setLayout(new java.awt.BorderLayout(0, 30));

        jPanel1.setLayout(new java.awt.BorderLayout());

        jbtnThem.setText("Hóa đơn mới");

        jbtnThuHoi.setText("Thu hồi");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbtnThem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtnThuHoi)
                .addContainerGap(1078, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnThem)
                    .addComponent(jbtnThuHoi))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel8, java.awt.BorderLayout.PAGE_START);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Tìm kiếm hóa đơn"));

        jbtnSearch.setText("Tìm kiếm");

        jlbNccSearch.setText("Nhà cung cấp");

        jlbSanPhamSearch.setText("Sản phẩm");

        jbtnLamMoi.setText("Làm mới");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jcbNameSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfNameSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtnSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtnLamMoi)
                .addGap(70, 70, 70)
                .addComponent(jlbNccSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfNcc, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70)
                .addComponent(jlbSanPhamSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(124, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbNameSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfNameSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnSearch)
                    .addComponent(jlbNccSearch)
                    .addComponent(jtfNcc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlbSanPhamSearch)
                    .addComponent(jtfSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnLamMoi))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel7, java.awt.BorderLayout.CENTER);

        add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jpnCTHD.setBorder(javax.swing.BorderFactory.createTitledBorder("Chi tiết hóa đơn mua"));
        jpnCTHD.setMinimumSize(new java.awt.Dimension(110, 500));
        jpnCTHD.setPreferredSize(new java.awt.Dimension(800, 500));
        jpnCTHD.setLayout(new java.awt.BorderLayout());

        jPanel5.setLayout(new java.awt.BorderLayout());

        jtbCTHD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã sản phẩm", "Sản phẩm", "Nhà cung cấp", "Giá nhập (VNĐ)", "Số lượng nhập (chiếc)", "Tổng tiền (VNĐ)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jtbCTHD);
        if (jtbCTHD.getColumnModel().getColumnCount() > 0) {
            jtbCTHD.getColumnModel().getColumn(0).setResizable(false);
            jtbCTHD.getColumnModel().getColumn(1).setResizable(false);
            jtbCTHD.getColumnModel().getColumn(2).setResizable(false);
            jtbCTHD.getColumnModel().getColumn(3).setResizable(false);
            jtbCTHD.getColumnModel().getColumn(4).setResizable(false);
            jtbCTHD.getColumnModel().getColumn(5).setResizable(false);
        }

        jPanel5.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jPanel3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 20));
        jPanel3.setPreferredSize(new java.awt.Dimension(790, 36));
        java.awt.FlowLayout flowLayout1 = new java.awt.FlowLayout(java.awt.FlowLayout.TRAILING);
        flowLayout1.setAlignOnBaseline(true);
        jPanel3.setLayout(flowLayout1);

        jlbTitleTongTienHD.setText("Tổng tiền hóa đơn:");
        jPanel3.add(jlbTitleTongTienHD);

        jlbTongTienHD.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jlbTongTienHD.setForeground(new java.awt.Color(255, 0, 51));
        jlbTongTienHD.setMaximumSize(new java.awt.Dimension(140, 25));
        jlbTongTienHD.setMinimumSize(new java.awt.Dimension(140, 25));
        jlbTongTienHD.setOpaque(true);
        jlbTongTienHD.setPreferredSize(new java.awt.Dimension(140, 25));
        jPanel3.add(jlbTongTienHD);

        jPanel5.add(jPanel3, java.awt.BorderLayout.PAGE_END);

        jpnCTHD.add(jPanel5, java.awt.BorderLayout.CENTER);

        jpnCTSP.setBorder(javax.swing.BorderFactory.createTitledBorder("Chi tiết sản phẩm"));
        jpnCTSP.setPreferredSize(new java.awt.Dimension(790, 180));

        jlbMaSP.setText("Mã sản phẩm:");

        jlbSanPham.setText("Sản phẩm:");

        jlbGiaNhap.setText("Giá nhập:");

        jlbSoLuongNhap.setText("Số lượng nhập:");

        jlbTongTienCT.setText("Tổng tiền:");

        jlbNcc.setText("Nhà cung cấp:");

        javax.swing.GroupLayout jpnCTSPLayout = new javax.swing.GroupLayout(jpnCTSP);
        jpnCTSP.setLayout(jpnCTSPLayout);
        jpnCTSPLayout.setHorizontalGroup(
            jpnCTSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnCTSPLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnCTSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlbSanPham, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jpnCTSPLayout.createSequentialGroup()
                        .addGroup(jpnCTSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jlbMaSP, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
                            .addComponent(jlbGiaNhap, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jpnCTSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpnCTSPLayout.createSequentialGroup()
                                .addComponent(jlbNcc, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(196, 196, 196))
                            .addComponent(jlbSoLuongNhap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jpnCTSPLayout.createSequentialGroup()
                        .addComponent(jlbTongTienCT, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jpnCTSPLayout.setVerticalGroup(
            jpnCTSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnCTSPLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnCTSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlbMaSP)
                    .addComponent(jlbNcc))
                .addGap(18, 18, 18)
                .addComponent(jlbSanPham)
                .addGap(18, 18, 18)
                .addGroup(jpnCTSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlbGiaNhap)
                    .addComponent(jlbSoLuongNhap))
                .addGap(18, 18, 18)
                .addComponent(jlbTongTienCT)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jpnCTHD.add(jpnCTSP, java.awt.BorderLayout.PAGE_END);

        jPanel2.add(jpnCTHD, java.awt.BorderLayout.LINE_END);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Danh sách hóa đơn mua"));
        jPanel4.setLayout(new java.awt.BorderLayout());

        jtbDSHD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã hóa đơn", "Người tạo hóa đơn", "Ngày tạo", "Tổng tiền (VNĐ)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtbDSHD);
        if (jtbDSHD.getColumnModel().getColumnCount() > 0) {
            jtbDSHD.getColumnModel().getColumn(0).setResizable(false);
            jtbDSHD.getColumnModel().getColumn(1).setResizable(false);
            jtbDSHD.getColumnModel().getColumn(2).setResizable(false);
            jtbDSHD.getColumnModel().getColumn(3).setResizable(false);
        }

        jPanel4.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanel4, java.awt.BorderLayout.CENTER);

        add(jPanel2, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbtnLamMoi;
    private javax.swing.JButton jbtnSearch;
    private javax.swing.JButton jbtnThem;
    private javax.swing.JButton jbtnThuHoi;
    private javax.swing.JComboBox<String> jcbNameSearch;
    private javax.swing.JLabel jlbGiaNhap;
    private javax.swing.JLabel jlbMaSP;
    private javax.swing.JLabel jlbNcc;
    private javax.swing.JLabel jlbNccSearch;
    private javax.swing.JLabel jlbSanPham;
    private javax.swing.JLabel jlbSanPhamSearch;
    private javax.swing.JLabel jlbSoLuongNhap;
    private javax.swing.JLabel jlbTitleTongTienHD;
    private javax.swing.JLabel jlbTongTienCT;
    private javax.swing.JLabel jlbTongTienHD;
    private javax.swing.JPanel jpnCTHD;
    private javax.swing.JPanel jpnCTSP;
    private javax.swing.JTable jtbCTHD;
    private javax.swing.JTable jtbDSHD;
    private javax.swing.JTextField jtfNameSearch;
    private javax.swing.JTextField jtfNcc;
    private javax.swing.JTextField jtfSanPham;
    // End of variables declaration//GEN-END:variables

        private void customComponents() {

                HoaDonMuaGUI referenceHdmGUI = this;

                jcbNameSearch.removeAllItems();
                for (String item : HoaDonMua.itemFiltersComboBox) {
                        jcbNameSearch.addItem(item);
                }

                ListSelectionModel selectOfDSHD = this.jtbDSHD.getSelectionModel();
                selectOfDSHD.addListSelectionListener(new ListSelectionListener() {
                        @Override
                        public void valueChanged(ListSelectionEvent e) {
                                int row = jtbDSHD.getSelectedRow();
                                if (row < 0) {
                                        renderTableCTHDM();
                                        renderInforCTHD();
                                        return;
                                }
                                ;
                                renderTableCTHDM(row);
                        }
                });

                ListSelectionModel selectOfCTHD = this.jtbCTHD.getSelectionModel();
                selectOfCTHD.addListSelectionListener(new ListSelectionListener() {
                        @Override
                        public void valueChanged(ListSelectionEvent e) {
                                int row = jtbCTHD.getSelectedRow();
                                if (row < 0) {
                                        renderInforCTHD();
                                        return;
                                }
                                renderInforCTHD(row);
                        }
                });

                jbtnSearch.addActionListener(new ActionListener() {
                        @Override
                        public void actionPerformed(ActionEvent e) {
                                handleFilterHDM();
                        }
                });

                jbtnLamMoi.addActionListener(new ActionListener() {
                        @Override
                        public void actionPerformed(ActionEvent e) {
                                jcbNameSearch.setSelectedIndex(0);
                                jtfNameSearch.setText("");
                                jtfNcc.setText("");
                                jtfSanPham.setText("");
                                handleFilterHDM();
                        }
                });

                jbtnThem.addActionListener(new ActionListener() {
                        @Override
                        public void actionPerformed(ActionEvent e) {
                                JFrame topFrame = (JFrame) SwingUtilities.getAncestorOfClass(JFrame.class,
                                                (Component) e.getSource());
                                JDialog dialog = new JDialog(topFrame, JDialog.ModalityType.APPLICATION_MODAL);
                                dialog.setTitle("Tạo hóa đơn mua mới");
                                dialog.setLayout(new BorderLayout(0, 0));
                                dialog.setSize(1200, 800);
                                dialog.add(new HoaDonMuaMoiGUI(dialog, referenceHdmGUI));
                                dialog.setLocationRelativeTo(null);
                                dialog.setVisible(true);
                        }
                });

                jbtnThuHoi.addActionListener(new ActionListener() {
                        @Override
                        public void actionPerformed(ActionEvent e) {
                                handleThuHoiHDM();
                        }

                });

                renderTableHDM();
        }

        public void renderTableHDM() {
                String[][] data = this.hdmBUS.getDsHDM();
                this.jtbDSHD.setModel(new DefaultTableModel(
                                data,
                                new String[] {
                                                "Mã hóa đơn", "Người tạo hóa đơn", "Ngày tạo", "Tổng tiền (VNĐ)"
                                }) {
                        boolean[] canEdit = new boolean[] {
                                        false, false, false, false
                        };

                        @Override
                        public boolean isCellEditable(int rowIndex, int columnIndex) {
                                return canEdit[columnIndex];
                        }
                });
                this.revalidate();
        }

        public void renderTableCTHDM() {
                jpnCTHD.setBorder(javax.swing.BorderFactory.createTitledBorder("Chi tiết hóa đơn mua"));
                jlbTongTienHD.setText("");
                jtbCTHD.setModel(new javax.swing.table.DefaultTableModel(
                                new Object[][] {},
                                new String[] {
                                                "Mã sản phẩm", "Sản phẩm", "Nhà cung cấp", "Giá nhập (VNĐ)",
                                                "Số lượng nhập (chiếc)",
                                                "Tổng tiền (VNĐ)"
                                }) {
                        boolean[] canEdit = new boolean[] {
                                        false, false, false, false, false, false
                        };

                        @Override
                        public boolean isCellEditable(int rowIndex, int columnIndex) {
                                return canEdit[columnIndex];
                        }
                });
                this.revalidate();
        }

        public void renderTableCTHDM(int row) {
                HoaDonMua hdmSelected = hdmBUS.getHDMSelected(row);
                jpnCTHD.setBorder(
                                javax.swing.BorderFactory
                                                .createTitledBorder("Chi tiết hóa đơn mua " + hdmSelected.getMaHD()));
                jlbTongTienHD.setText(FormatValue.formatCurrency(hdmSelected.getTongTien()));

                String[][] data = hdmBUS.getDsCTHDM(row);
                jtbCTHD.setModel(new javax.swing.table.DefaultTableModel(
                                data,
                                new String[] {
                                                "Mã sản phẩm", "Sản phẩm", "Nhà cung cấp", "Giá nhập (VNĐ)",
                                                "Số lượng nhập (chiếc)",
                                                "Tổng tiền (VNĐ)"
                                }) {
                        boolean[] canEdit = new boolean[] {
                                        false, false, false, false, false, false
                        };

                        @Override
                        public boolean isCellEditable(int rowIndex, int columnIndex) {
                                return canEdit[columnIndex];
                        }
                });
                this.revalidate();
        };

        public void renderInforCTHD() {
                this.jlbMaSP.setText("Mã sản phẩm:");
                this.jlbSanPham.setText("Sản phẩm:");
                this.jlbNcc.setText("Nhà cung cấp:");
                this.jlbGiaNhap.setText("Giá nhập:");
                this.jlbSoLuongNhap.setText("Số lượng nhập:");
                this.jlbTongTienCT.setText("Tổng tiền:");
                this.revalidate();
        }

        public void renderInforCTHD(int row) {
                ChiTietHDM cthd = hdmBUS.getCTHDMSelected(row);
                SanPham sp = cthd.getSanPham();
                this.jlbMaSP.setText("Mã sản phẩm: " + sp.getMaSP());
                this.jlbSanPham.setText("Sản phẩm: " + sp.getTenSP());
                this.jlbNcc.setText("Nhà cung cấp: " + cthd.getNcc().getTenNcc());
                this.jlbGiaNhap.setText("Giá nhập: " + cthd.getGiaNhap() + " VNĐ");
                this.jlbSoLuongNhap.setText("Số lượng nhập: " + sp.getSoLuong() + " chiếc");
                this.jlbTongTienCT.setText("Tổng tiền: " + cthd.getTongTien() + " VNĐ");
                this.revalidate();
        }

        public void handleFilterHDM() {
                String itemFilterCbSelected = (String) jcbNameSearch.getSelectedItem();
                String valueOfJtfNameSearch = jtfNameSearch.getText();
                String valueOfJtfNcc = jtfNcc.getText();
                String valueOfJtfSanPham = jtfSanPham.getText();
                hdmBUS.filterDsHDM(itemFilterCbSelected, valueOfJtfNameSearch, valueOfJtfNcc, valueOfJtfSanPham);
                renderTableHDM();
        }

        public void handleThuHoiHDM() {
                int row = jtbDSHD.getSelectedRow();
                if (row == -1) {
                        JOptionPane.showMessageDialog(
                                        this,
                                        "Chưa chọn hóa đơn",
                                        "Thông báo",
                                        JOptionPane.WARNING_MESSAGE);
                        return;
                }
                long ngayThuHoiTime = LocalDateTime.now().atZone(ZoneId.systemDefault()).toInstant().toEpochMilli();
                long ngayTaoTime = hdmBUS.getHDMSelected(row).getNgayTao().atZone(ZoneId.systemDefault()).toInstant()
                                .toEpochMilli();
                long timeOf24hBySecond = 86400; // thời gian cho phép thu hồi tính theo giây
                long timeUnderwentBySecond = (ngayThuHoiTime - ngayTaoTime) / (1000); // thời gian đã trải qua từ lúc
                                                                                      // tạo cho
                                                                                      // đến lúc thu hồi tính theo giây
                if (timeUnderwentBySecond <= timeOf24hBySecond) {
                        int option = JOptionPane.showConfirmDialog(
                                        this,
                                        String.format("Xác nhận thu hồi hóa đơn %s",
                                                        hdmBUS.getHDMSelected(row).getMaHD()),
                                        "Thông báo xác nhận",
                                        JOptionPane.YES_NO_OPTION,
                                        JOptionPane.INFORMATION_MESSAGE);
                        if (option == JOptionPane.YES_OPTION) {
                                hdmBUS.thuHoiHDM(row);
                                JOptionPane.showMessageDialog(
                                                this,
                                                "Đã thu hồi hóa đơn!",
                                                "Thông báo",
                                                JOptionPane.INFORMATION_MESSAGE);
                                hdmBUS.getDsHDMFromDB();
                                renderTableHDM();
                        }
                } else {
                        JOptionPane.showMessageDialog(
                                        this,
                                        "Chỉ có thể thu hồi hóa đơn trước 24 tiếng sau khi tạo hóa đơn",
                                        "Thông báo",
                                        JOptionPane.WARNING_MESSAGE);
                }
        }
}
