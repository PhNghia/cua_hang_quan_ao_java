/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import BUS.MenuBUS;
import DAO.MenuDAO;
import SWING.MenuItem;
import java.awt.Color;
import java.awt.Dimension;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;

/**
 *
 * @author BomPC
 */
public class MenuGUI extends javax.swing.JPanel {

    /**
     * Creates new form MenuGUI
     */
    private MenuBUS menuBUS;
    private JFrame app;
    
    public MenuGUI(JFrame app) {
        this.app = app;
        menuBUS = new MenuBUS(new MenuDAO());
        initComponents();
        render();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(51, 51, 51));
        setPreferredSize(new java.awt.Dimension(200, 300));
        setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 20, 0));
    }// </editor-fold>//GEN-END:initComponents

    private void render() {
        ArrayList<String> dsChucNang = menuBUS.getDsChucNang("QL");
        JPanel rootPage = (JPanel) app.getContentPane().getComponent(0);
        app.setTitle(dsChucNang.get(0));
        choosePage(rootPage, dsChucNang.get(0));
        for (String chucNang : dsChucNang) {
            MenuItem menuItem = new MenuItem();
            menuItem.setText(chucNang);
            menuItem.addMouseListener(new java.awt.event.MouseAdapter() {
                @Override
                public void mousePressed(java.awt.event.MouseEvent e) {
                    JLabel source = (JLabel) e.getSource();
                    String item = source.getText();
                    app.setTitle(item);
                    rootPage.removeAll();
                    
                    choosePage(rootPage, item);

                    rootPage.repaint();
                    rootPage.revalidate();
                }
            });
            this.add(menuItem);
        }
    }

    public void choosePage(JPanel rootPage, String item) {
        switch (item) {
            case "Tài khoản":
                rootPage.add(new TaiKhoanGUI());
                break;
            case "Nhân viên":
                rootPage.add(new NhanVienGUI());
                break;
            case "Khách hàng":
                rootPage.add(new KhachHangGUI());
                break;
            case "Sản phẩm":
                rootPage.add(new SanPhamGUI());
                break;
            case "Hóa đơn bán":
                rootPage.add(new HoaDonBanGUI());
                break;
            case "Hóa đơn mua":
                rootPage.add(new HoaDonMuaGUI());
                break;
            case "Nhà cung cấp":
                rootPage.add(new NhaCungCapGUI());
                break;
            default:
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
